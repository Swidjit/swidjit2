%div{:id=>"item-#{@freepile.id}"}
  =@freepile.title
  #map-canvas{:style=>"height:300px;"}
  -if user_signed_in?
    -if current_user.watches.where(:item_id=>@freepile.id).present?
      =link_to item_watches_path(@freepile.id), :remote => :true, :method=>:@freepile do
        %button.watch unwatch
    -else
      =link_to item_watches_path(@freepile.id), :remote => :true, :method=>:@freepile do
        %button.watch watch

    #reactions
      =link_to create_or_destroy_reaction_item_path(@freepile.id, :type => "like"),  :remote=>"true",:method => "post" do
        .like
          %i.fi-like
          .count=@freepile.reactions.liked.size
      =link_to create_or_destroy_reaction_item_path(@freepile.id, :type => "love"),  :remote=>"true",:method => "post" do
        .love
          %i.fi-heart
          .count=@freepile.reactions.loved.size
      =link_to create_or_destroy_reaction_item_path(@freepile.id, :type => "share"),  {:remote=>"true",:method => "post"} do
        .share
          %i.fi-share
          .count=@freepile.reactions.shared.size

  =render :partial => 'items/tags', :locals=>{item:@freepile}
  #item-photo
    =render :partial => 'items/photo', :locals=>{item:@freepile}
  =s3_uploader_form callback_url: upload_file_item_path(@freepile), remote: :true, callback_param: "item[image_url]", id: "s3-uploader" do
    %div#test
      .wrapper
        =file_field_tag :file
      %button upload image
  %script#template-upload{:type => "text/x-tmpl"}
    .upload{:id => "file-{%=o.unique_id%}"}
      {%=o.name%}
      .progress
        .bar{:style => "width: 0%"}

  #comments
    %h5 Comments
    .comments
      = render :partial => 'comments/comment', :collection => @comments, :as => :comment
    = render :partial => 'comments/form', :locals => { :comment => @new_comment }

  -if user_signed_in?
    =link_to "flag post", "#", :id => "reveal-flag-form"
    #flag.reveal-modal{"data-reveal" => ""}
      %h4 Flag #{@freepile.title}


      =form_for :flag, :url => item_flags_path(@freepile.id), :method=>:post, :remote=>:true do
        =hidden_field_tag :flagged_by, current_user.id
        %label which etiquette rule did this user break?
        =select_tag :term, options_from_collection_for_select(Term.where(:term_type=>"online"), "id", "title")
        =hidden_field_tag :term_type, "online"
        =text_area_tag :comment, nil,:placeholder => "add an optional comment here to explain your reason for flagging"
        =submit_tag "Flag Item", :class => "button"
      %a.close-reveal-modal Ã—

:javascript
  $(document).on('ready page:load', function(){
    $('#reveal-flag-form').on('click', function() {
      $('#flag').foundation("reveal","open");
    });
    $("#s3-uploader").S3Uploader();
    coord = "#{@freepile.latlng}";
    coords = coord.split(",");
    latlng = new google.maps.LatLng(coords[0],coords[1]);
    options = {
      language: 'en-GB',
      center: latlng,
      zoom: 14
    };
    map = new google.maps.Map(document.getElementById('map-canvas'), options);
    marker = new google.maps.Marker({
      position:latlng,
      map: map,
      title: "#{@freepile.title}"
    });
  });